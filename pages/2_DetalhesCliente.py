import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(layout="wide")
st.title("üìå Detalhamento do Cliente")

@st.cache_data
def carregar_dados():
    df = pd.read_excel("dados_barbearia.xlsx", sheet_name="Base de Dados")
    df.columns = [str(col).strip() for col in df.columns]
    df["Data"] = pd.to_datetime(df["Data"], errors="coerce")
    df = df.dropna(subset=["Data"])
    df["Ano"] = df["Data"].dt.year
    df["M√™s"] = df["Data"].dt.month
    df["M√™s_Ano"] = df["Data"].dt.strftime("%Y-%m")
    return df

df = carregar_dados()

# Filtro de cliente na pr√≥pria p√°gina
clientes_disponiveis = sorted(df["Cliente"].dropna().unique())
cliente = st.selectbox("üë§ Escolha um cliente para detalhar", clientes_disponiveis)

if not cliente:
    st.warning("Selecione um cliente para continuar.")
    st.stop()

df_cliente = df[df["Cliente"] == cliente]

# üìÖ Hist√≥rico
st.subheader(f"üìÖ Hist√≥rico de atendimentos - {cliente}")
st.dataframe(df_cliente.sort_values("Data", ascending=False), use_container_width=True)

# üìä Receita mensal por tipo (Servi√ßo vs Produto)
st.subheader("üìä Receita mensal por tipo de receita")

receita_tipo = (
    df_cliente.groupby(["M√™s_Ano", "Tipo"])["Valor"]
    .sum()
    .reset_index()
)
receita_tipo["M√™s_Ano"] = receita_tipo["M√™s_Ano"].astype(str)  # for√ßa como texto no eixo

fig_receita = px.bar(
    receita_tipo,
    x="M√™s_Ano",
    y="Valor",
    color="Tipo",
    text_auto=".2s",
    labels={"Valor": "Receita (R$)", "M√™s_Ano": "M√™s"},
    barmode="group"
)
fig_receita.update_layout(height=400)
st.plotly_chart(fig_receita, use_container_width=True)

# üßë‚Äçüîß Distribui√ß√£o por funcion√°rio
st.subheader("üßë‚Äçüîß Atendimentos por Funcion√°rio")
por_func = df_cliente["Funcion√°rio"].value_counts().reset_index()
por_func.columns = ["Funcion√°rio", "Atendimentos"]
fig_func = px.bar(
    por_func,
    x="Funcion√°rio",
    y="Atendimentos",
    text_auto=True
)
fig_func.update_layout(height=350)
st.plotly_chart(fig_func, use_container_width=True)

# üìã Tabela resumo
st.subheader("üìã Resumo de Atendimentos")
resumo = df_cliente.groupby("Data").agg(
    Qtd_Servi√ßos=("Servi√ßo", "count"),
    Qtd_Produtos=("Tipo", lambda x: (x == "Produto").sum())
).reset_index()

resumo["Qtd_Combo"] = resumo["Qtd_Servi√ßos"].apply(lambda x: 1 if x > 1 else 0)
resumo["Qtd_Simples"] = resumo["Qtd_Servi√ßos"].apply(lambda x: 1 if x == 1 else 0)

resumo_final = pd.DataFrame({
    "Total Atendimentos": [resumo.shape[0]],
    "Qtd Combos": [resumo["Qtd_Combo"].sum()],
    "Qtd Simples": [resumo["Qtd_Simples"].sum()]
})

st.dataframe(resumo_final, use_container_width=True)
