name: keepalive

on:
  schedule:
    - cron: "*/15 * * * *"   # roda a cada 15 min
  workflow_dispatch:

concurrency:
  group: keepalive
  cancel-in-progress: true

jobs:
  ping-with-browser:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      URL1: "https://ebenezer-variedades-eupku5qpyugdwxdtl5cyc5.streamlit.app/"
      URL2: "https://barbearia-dashboard-ieyuld6qeej74inyzs5cmf.streamlit.app/"
      URL3: "https://salaojp-feminino-djkchtdhag938vuprxksw9.streamlit.app/"
      URL4: "https://barbearia-vinicius-oruvkdm8glzhzql7o24qiq.streamlit.app/"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'   # sem cache

      - name: Instalar Playwright (libs JS)
        run: |
          npm init -y
          npm i playwright@1.46

      - name: Instalar browsers do Playwright
        uses: microsoft/playwright-github-action@v1

      - name: Criar script keepalive.js
        run: |
          cat > keepalive.js <<'EOF'
          const { chromium } = require('playwright');

          const urls = Object.entries(process.env)
            .filter(([k, v]) => /^URL\d+$/.test(k) && v)
            .map(([_, v]) => v);

          const UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36";

          async function ping(page, url) {
            const start = Date.now();
            console.log(`→ Abrindo: ${url}`);
            await page.setUserAgent(UA);
            await page.setViewportSize({ width: 1366, height: 768 });

            await page.goto(url, { waitUntil: 'networkidle', timeout: 120000 });

            try { await page.waitForSelector('.stApp', { timeout: 90000 }); }
            catch { console.log('⚠️ Não encontrou .stApp (pode estar acordando)…'); }

            await page.evaluate(() => window.scrollTo(0, document.body.scrollHeight));
            await page.waitForTimeout(3000 + Math.floor(Math.random()*2000));
            await page.evaluate(() => window.scrollTo(0, 0));
            await page.waitForTimeout(3000 + Math.floor(Math.random()*2000));

            const ms = Date.now() - start;
            console.log(`✓ OK: ${url} (${ms} ms)`);
          }

          (async () => {
            const browser = await chromium.launch({ headless: true, args: ['--no-sandbox'] });
            const context = await browser.newContext();
            const page = await context.newPage();

            for (const url of urls) {
              let ok = false;
              for (let attempt = 1; attempt <= 2; attempt++) {
                try { await ping(page, url); ok = true; break; }
                catch (e) {
                  console.log(`⚠️ Falha em ${url} (tentativa ${attempt}): ${e?.message || e}`);
                  await page.waitForTimeout(5000);
                }
              }
              if (!ok) console.log(`✗ Desisti: ${url}`);
            }
            await browser.close();
          })().catch(err => { console.error("Erro geral:", err); process.exit(1); });
          EOF

      - name: Rodar keepalive (Playwright)
        run: node keepalive.js
