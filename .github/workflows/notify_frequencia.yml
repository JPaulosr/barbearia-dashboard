name: notify_frequencia.yml

on:
  # dispara automático todo dia
  schedule:
    # 08:00 America/Sao_Paulo ≈ 11:00 UTC (sem DST no Brasil)
    - cron: "0 11 * * *"
  # opcional: botão "Run workflow" manual
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # ===== OBRIGATÓRIAS (defina em Settings > Secrets and variables > Actions > Secrets) =====
      SHEET_ID: ${{ secrets.SHEET_ID }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GCP_SERVICE_ACCOUNT_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}

      # ===== OPCIONAIS =====
      TZ: "America/Sao_Paulo"
      BASE_ABA: "Base de Dados"
      ABA_STATUS_CACHE: "status_cache"
      STATUS_ABA: "clientes_status"
      ABA_FIADO_CACHE: "fiado_cache"
      # se sua coluna de foto tiver outro nome, mude:
      FOTO_COL: "link_foto"

      # ===== Flags de envio (só o que você pediu) =====
      SEND_DAILY_HEADER: "false"   # não manda cabeçalho/summary
      SEND_LIST_POUCO:  "true"     # lista Pouco atrasado
      SEND_LIST_MUITO:  "true"     # lista Muito atrasado

      # feedbacks/transições (mantive default seguro)
      SEND_FEEDBACK_ON_NEW_VISIT_ALL: "false"
      SEND_FEEDBACK_ONLY_IF_WAS_LATE: "true"
      SEND_TRANSITION_BACK_TO_EM_DIA: "false"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Criar arquivo de credenciais do Google
        run: |
          echo "$GCP_SERVICE_ACCOUNT_JSON" > sa.json
          python - << 'PY'
import json; json.load(open('sa.json','r',encoding='utf-8'))
print("Service Account JSON OK")
PY
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/sa.json" >> $GITHUB_ENV

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install gspread gspread_dataframe pandas pytz requests google-auth

      - name: Rodar notify_inline.py
        run: |
          python notify_inline.py
