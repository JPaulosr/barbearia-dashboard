name: notify_frequencia.yml

on:
  workflow_dispatch:
  schedule:
    # 08:00 BRT ≈ 11:00 UTC
    - cron: '0 11 * * *'
    # A cada 10 min (transições + feedback)
    - cron: '*/10 * * * *'

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: America/Sao_Paulo
      SHEET_ID: ${{ secrets.SHEET_ID }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Abas / fotos
      STATUS_ABA: clientes_status
      # FOTO_COL: link_foto

      # Flags (liga listas só às 11:00 UTC)
      SEND_DAILY_HEADER: ${{ github.event_name == 'schedule' && github.event.schedule == '0 11 * * *' && 'true' || 'false' }}
      SEND_LIST_POUCO:  ${{ github.event_name == 'schedule' && github.event.schedule == '0 11 * * *' && 'true' || 'false' }}
      SEND_LIST_MUITO:  ${{ github.event_name == 'schedule' && github.event.schedule == '0 11 * * *' && 'true' || 'false' }}

      SEND_FEEDBACK_ONLY_IF_WAS_LATE: "true"
      SEND_FEEDBACK_ON_NEW_VISIT_ALL: "false"
      SEND_TRANSITION_BACK_TO_EM_DIA: "false"

      # Logs Python mais verbosos
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install \
            pandas==2.* \
            gspread==6.* \
            gspread-dataframe==3.* \
            google-auth==2.* \
            requests==2.* \
            pytz==2024.*

      - name: Write service account to file (heredoc safe)
        run: |
          set -euxo pipefail
          cat > sa.json <<'JSON'
          ${{ secrets.GCP_SERVICE_ACCOUNT }}
          JSON
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json" >> $GITHUB_ENV

      - name: Sanity check service account JSON
        run: |
          python - <<'PY'
          import json, sys
          try:
              j = json.load(open('sa.json','r'))
              print('Service account OK. project_id=', j.get('project_id'), ' client_email=', j.get('client_email'))
          except Exception as e:
              print('JSON inválido do service account:', e, file=sys.stderr)
              sys.exit(1)
          PY

      - name: Echo schedule flags (debug)
        run: |
          echo "SEND_DAILY_HEADER=$SEND_DAILY_HEADER"
          echo "SEND_LIST_POUCO=$SEND_LIST_POUCO"
          echo "SEND_LIST_MUITO=$SEND_LIST_MUITO"
          echo "STATUS_ABA=$STATUS_ABA"
          python -V

      - name: Run notifier
        run: |
          set -euxo pipefail
          python -u notify_inline.py
